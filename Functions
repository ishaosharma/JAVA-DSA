public class Functions {

    // public static void swap(int a, int b){
    //     //swap
    //     int temp = a;
    //     a = b;
    //     b = temp;
    //     // System.out.println("a = " + a);
    //     // System.out.println("b = " + b);
    // }
    // public static void main(String args[]){
    //     int a = 5; 
    //     int b = 10;
    //      swap(a,b);
    //      System.out.println("a = " + a);
    //      System.out.println("b = " + b);
    //}


//PRODUCT OF 2 NO.S

        // public static int multiply(int a , int b){
        //     int product = a * b;
        //     return product;
        // }
        // public static void main(String args[]){
        //     int a = 3;
        //     int b = 5;
        //     int prod = multiply(3,5);
        //     System.out.println("Prod is = "+ prod);
        //     prod = multiply(10, 5);
        //     System.out.println("prod is = " + prod);
            
        // }

// FACTORIAL OF N?
            // public static int factorial(int n){
            //     int f = 1;
            //     for(int i = 1; i<=n;i++){
            //         f = f*i;
            //     }
            //     return f;
            // }

            // public static void main(String args[]){
            //     System.out.println(factorial(4));
            // }

//CALCULATE BINOMIAL FACTORIAL = n!/(r! * (n-r)!)
        // public static int factorial(int n){
        // int f = 1;
        // for(int i = 1; i<=n;i++){
        //     f = f*i;
        //     }
        // return f;
        // }

        // public static int binCoeff(int n, int r){
        //     int fact_n = factorial(n);
        //     int fact_r = factorial(r);
        //     int fact_nmr = factorial(n-r);
            
        //     int binCoeff = fact_n/(fact_r * fact_nmr);
        //     return binCoeff;
        // }

        // public static void main(String args[]){
        //     System.out.println(binCoeff(5, 2));
        // }

// FUNCTION OVERLOADING
            public static int sum(int a, int b){
                return a+b;
            }
            
            public static int sum(int a,int b,int c){
                return a+b+c;
            }
            public static void main(String args[]){
                System.out.println(sum(5,2));
                System.out.println(sum(5,1,2));
            }

// FUNCTION OVERLOADING using parameters
            // public static int sum(int a, int b){
            //     return a+b;
            // }
            
            // public static int sum(int a,int b,int c){
            //     return a+b+c;
            // }
            // public static void main(String args[]){
            //     System.out.println(sum(5,2));
            //     System.out.println(sum(5,1,2));
            // }

// FUNCTION OVERLOADING using datatypes          
        //func to cal int sum
        // public static int sum(int a, int b){
        // return a+b;
        // }

        // //func to cal float sum
        // public static float sum(float a, float b){
        //     return a+b;
        // }

        // public static void main(String args[]){
        //     System.out.println(sum(3,5));
        //     System.out.println((sum(3.2f, 4.8f)));
        // }

//CHECK ISPRIME OR NOT
            //BRUTE FORCE APPROACH
                // public static boolean isPrime(int n){
                //     boolean isPrime = true;

                //     if(n == 2){       //corner case
                //         return true;
                //     }

                //     for(int i = 2;i<=n-1;i++){
                //         if(n % i == 0){
                //             return false; //not prime
                //         }
                //     }

                //     return true;    // is prime no.
                // }

                // public static void main(String args[]){
                //     System.out.println(isPrime(3));
                // }

            //OPTIMIZED APPROACH
                    
                // public static boolean isPrime(int n){
                //     boolean isPrime = true;

                //     if(n == 2) return true;

                //     for(int i = 2; i<=Math.sqrt(n);i++){
                //         if(n%i == 0){ 
                //             return false; //is not prime
                //         }
                //     }

                //     return true;    // is prime
                // }

                // public static void main(String args[]){
                //     System.out.println(isPrime(88));
                // }

//PRINT ALL PRIMES IN A RANGE

        // public static boolean isPrime(int n){
        //     boolean isPrime = true;

        //     if(n == 2) return true;

        //     for(int i = 2; i <=Math.sqrt(n);i++){
        //         if(n % i == 0){
        //             return false;
        //         }
        //     }

        //     return true;    //isprime no.
        // }

        // public static void primesinRange(int n){
        //     for(int i = 2; i<=n;i++){
        //         if(isPrime(i) == true){
        //             System.out.print(i + " ");
        //         }
        //     }
        //     System.out.println();
        // }
        // public static void main(String args[]){
        //     primesinRange(20);  // 2 to 20 range
        // }

//CONVERT FROM BINARY TO DECIMAL

            // public static void binToDec(int binNum){
            //     int myNum = binNum;
            //     int pow = 0;
            //     int decNum = 0;

            //     while(binNum > 0){
            //         int lastDigit = binNum % 10;
            //         decNum = decNum + (lastDigit * (int)Math.pow(2, pow));
            //         pow++;
            //         binNum = binNum/10;
            //     }
            //     System.out.println("Decimal of "+ myNum + " is = " + decNum);
            // }

            // public static void main(String args[]){
            //     binToDec(101);
            // }

//CONVERT FROM DECIMAL to binary

                // public static void decToBin(int decNum){
                //     int myNum = decNum;
                //     int pow = 0;
                //     int binNum = 0;

                //     while(decNum > 0){
                //         int rem = decNum % 2;       // remainder nikalungi
                //         binNum = binNum + (rem * (int)Math.pow(10, pow));
                //         pow++;
                //         decNum = decNum/2;          // quotient nikalungi
                //     }
                //     System.out.println("Binary number of "+ myNum + " is = " + binNum);
                // }

                // public static void main(String args[]){
                //     decToBin(11);
                // }

//ASSIGNMENT QNS 1 OF FUNCTIONS:Write a Java method to compute the averageof three numbers.

        // public static double Avg(double a,double b,double c){
        //     double avg = (a+b+c)/3;
        //     return avg;
        // }

        // public static void main(String args[]){
        //     Scanner sc=new Scanner(System.in);
        //     System.out.print("Input the first number: ");
        //     double x =sc.nextDouble();
        //     System.out.print("Input the second number:");
        //     double y =sc.nextDouble();
        //     System.out.print("Input the third number: ");
        //     double z=sc.nextDouble();
        //     System.out.print("The average value is "+ Avg(x,y,z));

        // }

//ASSIGNMENT QNS 2 OF FUNCTIONS: Write a method named isEven that accepts an int argument.
//The method should return true if the argument is even,or false otherwise.Also write a program to test your method.

            public static boolean isEven(int n){
                boolean isEven = true;

                if(n % 2 == 0){
                    return true;
                }
                return false;
            }

            public static void main(String args[]){
                Scanner sc = new Scanner(System.in);
                System.out.println("Enter the no. = ");
                int n = sc.nextInt();
                //System.out.println(isEven(n));
                if(isEven(n) == true) System.out.println("It is even");
                else{
                    System.out.println("Not even");
                }
               
            }






//ASSIGNMENT QNS 5 OF FUNCTIONS : Write a Java method to compute the sum of the digits in an integer.
                                //(Hint: Approach this question in the following way:a.
                                 // Take a variable sum = 0
                             // b.Find the last digit of the numberc.Add it to the sumd.Repeat a & b until the number becomes 0 )

            // public static void sum(int n){
            //     int sum = 0;

            //     while(n>0){
            //         int LastDigit = n%10;
            //         sum += LastDigit;
            //         n = n/10;
            //     }
            //     System.out.println("Sum of digits is = "+ sum);
            // }

            // public static void main(String args[]){
            //     Scanner sc = new Scanner(System.in);
            //     System.out.println("Enter the digits = ");
            //     int n = sc.nextInt();
            //     sum(n);
            // }


    }







